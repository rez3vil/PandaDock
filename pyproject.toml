[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "setuptools-scm[toml]>=6.2"
]
build-backend = "setuptools.build_meta"

[project]
name = "pandadock"
dynamic = ["version"]
description = "Next-Generation Molecular Docking with Novel PandaDock Algorithms"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Pritam Kumar Panda", email = "pritam@stanford.edu"}
]
maintainers = [
    {name = "Pritam Kumar Panda", email = "pritam@stanford.edu"}
]
keywords = [
    "molecular docking",
    "drug discovery", 
    "computational chemistry",
    "protein-ligand binding",
    "virtual screening",
    "machine learning",
    "genetic algorithm",
    "physics-based modeling"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pyyaml>=5.4.0",
    "click>=8.0.0",
    "tqdm>=4.62.0",
    "psutil>=5.8.0",
    "requests>=2.25.0",
    "plotly>=5.0.0",
    "h5py>=3.1.0",
    "joblib>=1.1.0"
]

[project.optional-dependencies]
ml = [
    "torch>=1.9.0",
    "torch-geometric>=2.0.0",
    "transformers>=4.0.0",
    "xgboost>=1.5.0"
]
chem = [
    "rdkit>=2022.03.1",
    "biopython>=1.79",
    "openmm>=7.7.0"
]
viz = [
    "py3dmol>=1.8.0",
    "nglview>=3.0.0",
    "bokeh>=2.4.0"
]
gpu = [
    "cupy-cuda11x>=9.0.0; platform_system != 'Darwin'"
]
web = [
    "flask>=2.0.0",
    "fastapi>=0.70.0",
    "uvicorn>=0.15.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "ruff>=0.1.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0",
    "sphinx-copybutton>=0.5.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.8.0",
    "coverage[toml]>=6.0.0"
]
all = [
    "pandadock[ml,chem,viz,gpu,web]"
]

[project.urls]
Homepage = "https://github.com/pritampanda15/PandaDock"
Documentation = "https://pandadock.readthedocs.io/"
Repository = "https://github.com/pritampanda15/PandaDock.git"
"Bug Tracker" = "https://github.com/pritampanda15/PandaDock/issues"
"Source Code" = "https://github.com/pritampanda15/PandaDock"
Changelog = "https://github.com/pritampanda15/PandaDock/blob/main/CHANGELOG.md"

[project.scripts]
pandadock = "pandadock.__main__:main"

[tool.setuptools]
packages = ["pandadock"]
include-package-data = true

[tool.setuptools.package-data]
pandadock = [
    "data/*.json",
    "data/*.csv", 
    "data/*.yaml",
    "templates/*.html",
    "examples/*.py",
    "examples/*.pdb",
    "examples/*.sdf"
]

[tool.setuptools_scm]
write_to = "pandadock/_version.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pandadock",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=5"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests requiring GPU support",
    "ml: marks tests requiring ML dependencies"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["pandadock"]
omit = [
    "pandadock/_version.py",
    "tests/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = "\\.pyi?$"
extend-exclude = '''
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "sklearn.*",
    "rdkit.*",
    "openmm.*",
    "torch.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "py3dmol.*",
    "nglview.*"
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88